[build-system]
requires = ["setuptools>=70", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-mcp"
version = "1.0.0"
description = "FastMCP 2.12+ compliant server for managing local and cloud LLMs with vLLM 1.0 integration"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Sandra Schipal", email = "sandra@example.com"}
]
dependencies = [
    # Core MCP
    "fastmcp>=2.12.0",
    "pydantic>=2.8.0",
    "python-dotenv>=1.0.0",
    
    # Web framework (if needed)
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.29.0",
    
    # HTTP client
    "httpx>=0.27.0",
    "aiohttp>=3.9.0",
    
    # AI/ML Core
    "torch>=2.4.0",
    "transformers>=4.44.0",
    "tokenizers>=0.19.0",
    
    # vLLM 1.0+ (performance critical)
    "vllm>=1.0.0",
    
    # Training & Fine-tuning
    "peft>=0.12.0",
    "bitsandbytes>=0.43.0",
    "accelerate>=0.32.0",
    "datasets>=2.20.0",
    
    # Multimodal support
    "Pillow>=10.4.0",
    "opencv-python>=4.10.0",
    "sentence-transformers>=3.0.0",
    
    # System monitoring
    "psutil>=6.0.0",
    "GPUtil>=1.4.0",
    
    # Logging & monitoring
    "structlog>=24.2.0",
    "rich>=13.7.0",
    "loguru>=0.7.0",
    
    # Utilities
    "typer>=0.12.0",
    "pyyaml>=6.0.1",
    "numpy>=1.26.0",
    "pandas>=2.2.0",
    "tqdm>=4.66.0",
    "tenacity>=8.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "black>=24.4.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "types-requests>=2.32.0",
    "types-pyyaml>=6.0.0",
]

full = [
    # Additional providers
    "openai>=1.35.0",
    "anthropic>=0.31.0",
    
    # Advanced features
    "gradio>=4.38.0",
    "streamlit>=1.36.0",
    
    # Additional ML tools
    "scikit-learn>=1.5.0",
    "matplotlib>=3.9.0",
    "seaborn>=0.13.0",
]

[project.urls]
Homepage = "https://github.com/sandraschi/local-llm-mcp"
Documentation = "https://github.com/sandraschi/local-llm-mcp#readme"
Issues = "https://github.com/sandraschi/local-llm-mcp/issues"
Repository = "https://github.com/sandraschi/local-llm-mcp"

[project.scripts]
llm-mcp = "llm_mcp.main:cli"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
